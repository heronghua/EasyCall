apply plugin: 'com.android.application'
if (jiaguPluginPublishedLocal){
    apply plugin: 'com.archermind.jiagu'
}


android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.archiermind.easycall"
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        def inputPassword=false
        release {
            storeFile file('../keystores/release.keystore')
            keyAlias "androidreleasekey"
            if (inputPassword){
                if (System.console()==null){
                    System.err.println("We cannt use console for gradle deamon running!")
                }else{
                    storePassword System.console().readLine("\n storePassword : ")
                    keyPassword System.console().readLine("\n keyPassword : ")
                }

            }else{
                //read password from environment
                storePassword System.getenv("STORE_PWD")
                keyPassword System.getenv("KEY_PWD")
            }

        }
        debug {
            storeFile file('../keystores/debug.keystore')
            keyAlias "androiddebugkey"
            storePassword "android"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            debuggable true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    //===============================test library=============================================
    testImplementation 'junit:junit:4.12'
    // Set this dependency to build and run UI Automator tests
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.1.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.1'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.1'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    //====================================================================================
}

if (jiaguPluginPublishedLocal){

    jiagu {
        userName "Ronghua He"
        userPwd "xxxxxxxxxxx"

        keyStorePath ""

        keyStorePass ""

        keyStoreAlias ""

        getKeyStoreAliasPwd ""

        jiaguToolPath ""

    }

}




